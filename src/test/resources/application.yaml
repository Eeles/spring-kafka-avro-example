server:
  port: 9000

spring:
  datasource:
    url: jdbc:h2:mem:test;MODE=PostgreSQL

  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}

    properties:
      schema:
        registry:
          url: http://dummy

      specific:
        avro:
          reader: true

    listener:
      missing-topics-fatal: false

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.ctf.kafka.test.support.avro.CustomKafkaAvroSerializer

    consumer:
      group-id: testing-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: com.ctf.kafka.test.support.avro.CustomKafkaAvroMessageDeserializer

kafka:
  producer:
    topic: test-topic

  consumer:
    topic: test-topic