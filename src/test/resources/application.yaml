server:
  port: 9000

spring:
  datasource:
    url: jdbc:h2:mem:test;MODE=PostgreSQL

  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}

    properties:
      schema:
        registry:
          url: mock://test.scope

      spring:
        deserializer:
          value:
            delegate:
              class: io.confluent.kafka.serializers.KafkaAvroDeserializer

      specific:
        avro:
          reader: true

    listener:
      missing-topics-fatal: false
      ack-mode: MANUAL_IMMEDIATE

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer

    consumer:
      group-id: testing-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

retry:
  consumer:
    backoff-ms: 1000
    max-attempts: 3

kafka:
  producer:
    topic: test-topic

  consumer:
    topic: test-topic


